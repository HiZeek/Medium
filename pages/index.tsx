import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import Header from "../components/Header";
import { client, urlFor } from "../sanity";
import { Post } from "../typings";
import Link from "next/link";

interface Props {
  posts: [Post];
}

export default function Home({ posts }: Props) {
  console.log(posts);
  
  return (
    <div className="max-w-7xl mx-auto">
      <Head>
        <title>Medium Blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className="flex justify-between items-center bg-yellow-400 border-y border-black py-10 lg:py-0 ">
        <div className="px-10 space-y-5">
          <h1 className="text-6xl max-w-xl font-serif">
            <span className="underline decoration-black decoration-4">
              Medium
            </span>{" "}
            is a place to write, read, and connect
          </h1>
          <h2>
            It&apos;s easy and free to post your thinking on any topic and
            connect with millions of readers
          </h2>
        </div>
        <Image
          className="hidden md:inline-flex"
          src="/assets/m.png"
          width={300}
          height={300}
          alt="M"
        />
      </div>
      {/* Post */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 md:gap-6 p-2 md:p-6">
        {posts.map((post) => (
          <Link key={post._id} href={`/post/${post.slug.current}`}>
            <div className="border rounded-lg group cursor-pointer overflow-hidden">
              <Image
                src={urlFor(post.mainImage).url()!}
                alt=""
                width={500}
                height={400}
                className="w-full h-60 object-cover group-hover:scale-105 transition-transform duration-200 ease-in-out"
              />
              <div className="flex justify-between p-5 bg-white">
                <div>
                  <p className="text-lg font-bold">{post.title}</p>
                  <p className="text-xs">
                    {post.description} by {post.author.name}
                  </p>
                </div>
                <Image
                  src={urlFor(post.author.image).url()!}
                  alt=""
                  width={48}
                  height={48}
                  className='rounded-[50%]'
                />
              </div>
            </div>
          </Link>
        ))}
      </div>
    </div>
  );
}

export const getServerSideProps = async () => {
  const query = `*[_type == 'post'] {
    _id,
      title,
      slug,
      author -> {
        name, 
          image,
      },
      description,
      mainImage,
      slug
  }`;

  const posts = await client.fetch(query);
  return {
    props: {
      posts,
    },
  };
};
